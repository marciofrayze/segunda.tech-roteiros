Olá! Meu nome é Marcio e você está ouvindo o sexto episódio deste podcast.

Este é um projeto que criei com o objetivo de abrir espaço

pra discutirmos sobre LIVROS.

Aqui, pretendo falar um pouquinho sobre os livros

que de alguma forma influenciaram minha carreira.


Neste episódio escolhi falar sobre o Implementation Patterns

cuja tradução para o português ganhou o título de

Padrões de Implementação e o subtítulo: Um Catálogo de

Padrões Indispensável para o Dia a Dia do Programador.

Então, bora começar?


O autor desta obra é o Kent Beck,

que é um dos assinantes originais do Manifesto Ágil,

autor da série de livros sobre Programação Extrema,

e figura importante no Desenvolvimento de Software

guiado por Testes.


Ele é também autor dos livros Test-Driven Development e

Extreme Programming Explained, que com certeza também vão

estar presentes em episódios futuros deste podcast.


Mas o foco de hoje é o Implementation Patterns.

E o tema este livro é, de acordo com o próprio autor,

desenvolver softwares com *responsabilidade*.


Para se ter sucesso comercial, você não precisa necessariamente escrever um

codigo bonito ou de qualidade. Existem muitos programas de qualidade duvidosa

gerando muito dinheiro por ai.


Mas esta obra é para pessoas que querem mais do que

apenas construir softwares que funcionem.

É pra quem quer conseguir colocar frequentemente

softwares em produção,

com a capacidade de mudar a direção do produto para

atender as necessidades dos clientes de forma segura e,

consequentementente, estar um passo a frente da concorrência.


E, talvez até ainda mais importante que isso tudo,

este livro é pra quem quer ter mais prazer no que faz.

Afinal, a vida é muito curta para escrevermos códigos que não

temos orgulho de ter desenvolvido.


Então, quem é o publico alvo deste livro?

Bom, o foco são pessoas que já conseguem desenvolver um software.

Ou seja, não é pra quem está começando a escrever

suas primeiras linhas de código.


E em geral programas não são desenvolvidos por apenas uma pessoa.

Portanto precisamos saber nos comunicar bem através de nossos códigos.

Afinal, este é um dos nossos principais meios para nos expressarmos.


E este é um dos objetivos centrais deste livro:

Ajuda-lo a ser capaz de comunicar melhor suas intenções através de codigo.


Ao longo do livro, Kent Beck fala sobre 77 padrões para

tarefas que toda pessoa desenvolvedora enfrentará no dia a dia.

E outro ponto de destaque que o autor tenta enfatizar é sobre

como escrever programas mais legíveis.


Assim, você será capaz de escrever softwares com maior

manutenibilidade e trabalhar em time de forma mais eficiênte.


Logo no começo o autor destaca 3 valores que considera fundamentais:

comunicação, simplicidade e flexibilidade.


Ele apresenta e discute rapidamente estes *valores*,

para logo em seguida apresentar uma lista de *princípios* que vão

guiar todos os padrões apresentados nos capitulos seguintes.


Um destes princípios, por exemplo, é o Expressões Declarativas,

onde vai explicar os motivos de preferir expressar

suas intenções da forma mais declarativa possível,

evitando códigos procedurais.


Mas não pense que o livro se limita a dar uma lista de dicas de programação,

muito pelo contrário!


No capitulo 4, vai falar, por exemplo, sobre os perigos de

implementar códigos muito genéricos de forma prematura.

É um capitulo com apenas 2 páginas, mas que pode

evitar MUITA dor de cabeça e muito tempo e dinheiro disperdiçados.

Kent Beck consegue explicar este tipo de tema de forma muito simples,

clara, objetiva e bastante convincente.


A partir do capitulo 5, que começa na página 25,

começamos a encontrar os 77 padrões.

Alguns deles são: classes, interfaces abstratas, versionamento de interfaces,

o famoso objeto valor, parâmetros opcionais, inicialização preguiçosa,

clausula de guarda, exceções, exceções checadas e propagação de exceções,

construtor completo, método de fabrica, coleções, entre muitos outros.


Para alguns padrões o texto é bem curto e direto. Em outros,

como no caso das coleções e suas possíveis implementações,

o autor aprofunda um pouco mais o tema, explicando em mais detalhes.


Já no último capitulo, Evolving Frameworks, Kent Beck muda

o foco para falar sobre padrões para construção de *frameworks*

ao invés de *aplicações*.


É bastante interessante ver que o tipo de software que estamos

criando influência a forma como devemos implementa-lo.

Quando estamos implementando um framework, que será utilizado

por outras pessoas desenvolvedoras, existem preocupações extras

que preciamos nos atentar como, por exemplo, a retrocompatibilidade

com versões anteriores.


Afinal, não queremos forçar todas as pessoas que são usuárias de nosso

framework a re-rescrever todo o seu sistema sempre que lançarmos

uma nova versão, certo?


E este último capitulo vai justamente abordar este tipo de problema,

entre muitos outros pontos importantes que precisam de

atenção quando estamos implementando frameworks.


Fora tudo isso, ao longo do livro encontramos dicas valiosas

sobre temas diversos.

No capitulo 9, por exemplo, o autor faz uma breve descricão sobre como

costuma abordar problemas de performance, dando dicas sobre como

e quando tratar este tipo de problema.


E então, pra quem indicaria este livro?

Como disse lá no começo, o público alvo são pessoas que já

conseguem desenvolver um software, mas que querem

se tornar capazes de não apenas programar algo

que funcione, mas sim implementar códigos que

alem de funcionar,

são fáceis de compreender, manter e alterar.


Ou, de forma mais resumida, este é um livro para aquelas

pessoas que querem aprender a desenvolver software de forma

responsável.


Embora a linguagem de programação não seja o foco principal,

o livro apresenta exemplos utilizando Java.

Então, é fundamental ter algum conhecimento básico sobre

orientação a objetos para conseguir acompanhar o conteúdo

apresentado.


Esta obra foi lançada em outubro de 2007, mas considero

sua leitura muito proveitosa ainda em 2020. Além do mais,

é um livro bastante curto, com apenas 143 páginas.

E o Kent Beck é um excelente autor, capaz de explicar

temas bastante complexos de forma breve e muito

esclarecedora.


Diante disso tudo, recomendo a leitura deste livro

para qualquer pessoa desenvolvedora que já saiba o básico

de programação e orientação a objetos.


Então, é isso aí.

Este foi o sexto episódio deste podcast e espero que você tenha

gostado. Se quiser, pode mandar sua opinião, críticas ou sugestões

pra mim através do e-mail marcio@segunda.tech, blz?

Boa leitura pra você e, até o próximo livro!


Tempo gasto na produção deste podcast:

1:40h na criação do texto inicial
~2:20h texto inicial revisado
~2:50h revisao 2
~3:40h podcast gravado
~4:20h podcast editado
~4:50h podcast disponibilizado em todas as plataformas (yt, soundcloud e pagina web)
